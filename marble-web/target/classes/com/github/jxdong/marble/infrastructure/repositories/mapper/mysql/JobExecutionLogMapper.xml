<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.jxdong.marble.infrastructure.repositories.mapper.mysql.JobExecutionLogMapper">

    <resultMap id="JobLogRM" type="com.github.jxdong.marble.domain.model.JobExecutionLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="dataChange_LastTime" property="version"/>
        <result column="dataChange_lastTime" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Log_Column_List">
        mlj.id,
        mlj.app_code as appCode,
        mlj.sched_name as schedName,
        mlj.job_name as jobName,
        mlj.job_cron_express as jobCronExpress,
        mlj.server_info as serverInfo,
        mlj.req_result_code as reqResultCode,
        mlj.req_result_msg as reqResultMsg,
        mlj.request_no as requestNo,
        mlj.exec_result_code as execResultCode,
        mlj.exec_result_msg as execResultMsg,
        mlj.begin_time as beginTime,
        mlj.end_time as endTime,
        mlj.other_info as otherInfo,
        mlj.createTime,
        mlj.dataChange_lastTime
    </sql>

    <select id="selectById" resultMap="JobLogRM">
        SELECT
        <include refid="Log_Column_List"/>
        FROM marble_log_job mlj
        WHERE mlj.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByRequestNo" resultMap="JobLogRM">
        SELECT
        <include refid="Log_Column_List"/>
        FROM marble_log_job mlj
        WHERE mlj.request_no = #{requestNo,jdbcType=VARCHAR}
    </select>

    <select id="selectByMultiConditions" parameterType="java.util.HashMap" resultMap="JobLogRM">
        SELECT
        <include refid="Log_Column_List"/>
        FROM marble_log_job mlj
        WHERE
        TRUE
        <if test="appCode != null and appCode !=''">
            AND mlj.app_code = #{appCode, jdbcType=VARCHAR}
        </if>
        <if test="schedName != null and schedName !=''">
            AND mlj.sched_name = #{schedName, jdbcType=VARCHAR}
        </if>
        <if test="jobName != null and jobName !=''">
            AND mlj.job_name = #{jobName, jdbcType=VARCHAR}
        </if>
        <if test="serverInfo != null and serverInfo !=''">
            AND mlj.server_info = #{serverInfo, jdbcType=VARCHAR}
        </if>
        <if test="beginDate != null">
            <![CDATA[
                AND mlj.dataChange_lastTime >= #{beginDate, jdbcType=VARCHAR}
                ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[
                AND mlj.dataChange_lastTime <= #{endDate, jdbcType=VARCHAR}
                ]]>
        </if>
        <if test="reqResultCode != null">
            AND mlj.req_result_code = #{reqResultCode, jdbcType=INTEGER}
        </if>
        <if test="execResultCode != null">
            AND mlj.exec_result_code = #{execResultCode, jdbcType=INTEGER}
        </if>
        <if test="orderColumn != null and orderColumn !=''">
            ORDER BY mlj.${orderColumn}
            <if test="orderDir != null and orderDir !=''">
                ${orderDir}
            </if>
        </if>
    </select>

    <insert id="insert" parameterType="com.github.jxdong.marble.domain.model.JobExecutionLog" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO marble_log_job
        (
            app_code,
            sched_name,
            job_name,
            job_cron_express,
            server_info,
            request_no,
            req_result_code,
            req_result_msg,

            exec_result_code,
            exec_result_msg,

            begin_time,
            other_info,
            createTime,
            dataChange_lastTime
        )
        VALUES (
            #{appCode,jdbcType=VARCHAR},
            #{schedName,jdbcType=VARCHAR},
            #{jobName,jdbcType=VARCHAR},
            #{jobCronExpress,jdbcType=VARCHAR},
            #{serverInfo,jdbcType=VARCHAR},
            #{requestNo,jdbcType=VARCHAR},
            #{reqResultCode,jdbcType=INTEGER},
            #{reqResultMsg,jdbcType=VARCHAR},

            #{execResultCode,jdbcType=VARCHAR},
            #{execResultMsg,jdbcType=VARCHAR},

            now(),
            #{otherInfo,jdbcType=VARCHAR},
            now(),
            now()
        )
    </insert>

    <delete id="deleteById">
        DELETE FROM marble_log_job mlj
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteJobLog">
        DELETE FROM marble_log_job
        WHERE
        app_code = #{appCode, jdbcType=VARCHAR}
        <if test="schedName != null and schedName !=''">
            AND `sched_name` = #{schedName, jdbcType=VARCHAR}
        </if>
        <if test="jobName != null and jobName !=''">
            AND `job_name` = #{jobName, jdbcType=VARCHAR}
        </if>
        <if test="execResultCodes != null and execResultCodes.size>0">
            AND `exec_result_code` in
            <foreach item="item" index="index" collection="execResultCodes" open="(" separator="," close=")">
                #{item, jdbcType=INTEGER}
            </foreach>
        </if>
        LIMIT 10000
    </delete>

    <update id="updateLog" parameterType="com.github.jxdong.marble.domain.model.JobExecutionLog">

        UPDATE marble_log_job
        <set>
            <if test="execResultCode != null">
                exec_result_code = #{execResultCode,jdbcType=INTEGER},
            </if>
            <if test="execResultMsg != null ">
                exec_result_msg = #{execResultMsg,jdbcType=VARCHAR},
            </if>
            <if test="reqResultCode != null ">
                req_result_code = #{reqResultCode,jdbcType=INTEGER},
            </if>
            <if test="reqResultMsg != null ">
                req_result_msg = #{reqResultMsg,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null ">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="otherInfo != null ">
                other_info = #{otherInfo,jdbcType=VARCHAR},
            </if>
            dataChange_lastTime = now()
        </set>

        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 临时的清理数据SQL -->
    <delete id="deleteQuartzJobDetail">
        DELETE FROM marble_qrtz_job_details
    </delete>

    <delete id="deleteQuartzCronTriggers">
        DELETE FROM marble_qrtz_cron_triggers
    </delete>

    <delete id="deleteQuartzFiredTriggers">
        DELETE FROM marble_qrtz_fired_triggers
    </delete>

    <delete id="deleteQuartzLocks">
        DELETE FROM marble_qrtz_locks
    </delete>

    <delete id="deleteQuartzPausedTriggerGroups">
        DELETE FROM marble_qrtz_paused_trigger_grps
    </delete>

    <delete id="deleteQuartzSchedState">
        DELETE FROM marble_qrtz_scheduler_state
    </delete>

    <delete id="deleteQuartzTriggers">
        DELETE FROM marble_qrtz_triggers
    </delete>
</mapper>
